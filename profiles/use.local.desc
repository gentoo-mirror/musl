# This file is deprecated as per GLEP 56 in favor of metadata.xml.
# Please add your descriptions to your package's metadata.xml ONLY.
# * generated automatically using pmaint *

app-emulation/libvirt:apparmor - Enable AppArmor support
app-emulation/libvirt:dtrace - Enable dtrace support via dev-util/systemtap
app-emulation/libvirt:firewalld - DBus interface to iptables/ebtables allowing for better runtime management of your firewall.
app-emulation/libvirt:fuse - Allow LXC to use sys-fs/fuse for mount points
app-emulation/libvirt:glusterfs - Enable GlusterFS support via sys-cluster/glusterfs
app-emulation/libvirt:iscsi - Allow using an iSCSI remote storage server as pool for disk image storage
app-emulation/libvirt:iscsi-direct - Allow using libiscsi for iSCSI storage pool backend
app-emulation/libvirt:libssh - Use net-libs/libssh to communicate with remote libvirtd hosts, for example: qemu+libssh://server/system
app-emulation/libvirt:libvirtd - Builds the libvirtd daemon as well as the client utilities instead of just the client utilities
app-emulation/libvirt:lvm - Allow using the Logical Volume Manager (sys-fs/lvm2) as pool for disk image storage
app-emulation/libvirt:lxc - Support management of Linux Containers virtualisation (app-emulation/lxc)
app-emulation/libvirt:macvtap - Support for MAC-based TAP (macvlan/macvtap). For networking instead of the normal TUN/TAP.
app-emulation/libvirt:nfs - Allow using Network File System mounts as pool for disk image storage
app-emulation/libvirt:numa - Use NUMA for memory segmenting via sys-process/numactl and sys-process/numad
app-emulation/libvirt:openvz - Support management of OpenVZ virtualisation (openvz-sources)
app-emulation/libvirt:parted - Allow using real disk partitions as pool for disk image storage, using sys-block/parted to create, resize and delete them.
app-emulation/libvirt:pcap - Support auto learning IP addreses for routing
app-emulation/libvirt:qemu - Support management of QEMU virtualisation (app-emulation/qemu)
app-emulation/libvirt:rbd - Enable rados block device support via sys-cluster/ceph
app-emulation/libvirt:vepa - Virtual Ethernet Port Aggregator (VEPA) / 802.1Qbg support. Relies on macvtap support.
app-emulation/libvirt:virt-network - Enable virtual networking (NAT) support for guests. Includes all the dependencies for NATed network mode. Effectively any network setup that relies on libvirt to setup and configure network interfaces on your host. This can include bridged and routed networks ONLY if you are allowing libvirt to create and manage the underlying devices for you. In some cases this requires enabling the 'netcf' USE flag (currently unavailable).
app-emulation/libvirt:virtualbox - Support management of VirtualBox virtualisation (app-emulation/virtualbox)
app-emulation/libvirt:wireshark-plugins - Build the net-analyzer/wireshark plugin for the Libvirt RPC protocol
app-emulation/libvirt:xen - Support management of Xen virtualisation (app-emulation/xen)
app-emulation/libvirt:zfs - Enable ZFS backend storage sys-fs/zfs
app-emulation/qemu:accessibility - Adds support for braille displays using brltty
app-emulation/qemu:aio - Enables support for Linux's Async IO
app-emulation/qemu:alsa - Enable alsa output for sound emulation
app-emulation/qemu:capstone - Enable disassembly support with dev-libs/capstone
app-emulation/qemu:curl - Support ISOs / -cdrom directives via HTTP or HTTPS.
app-emulation/qemu:fdt - Enables firmware device tree support
app-emulation/qemu:fuse - Enables FUSE block device export
app-emulation/qemu:glusterfs - Enables GlusterFS cluster fileystem via sys-cluster/glusterfs
app-emulation/qemu:gnutls - Enable TLS support for the VNC console server. For 1.4 and newer this also enables WebSocket support. For 2.0 through 2.3 also enables disk quorum support.
app-emulation/qemu:io-uring - Enable efficient I/O via sys-libs/liburing.
app-emulation/qemu:iscsi - Enable direct iSCSI support via net-libs/libiscsi instead of indirectly via the Linux block layer that sys-block/open-iscsi does.
app-emulation/qemu:jemalloc - Enable jemalloc allocator support
app-emulation/qemu:jpeg - Enable jpeg image support for the VNC console server
app-emulation/qemu:multipath - Enable multipath persistent reservation passthrough via sys-fs/multipath-tools.
app-emulation/qemu:ncurses - Enable the ncurses-based console
app-emulation/qemu:nfs - Enable NFS support
app-emulation/qemu:numa - Enable NUMA support
app-emulation/qemu:pin-upstream-blobs - Pin the versions of BIOS firmware to the version included in the upstream release. This is needed to sanely support migration/suspend/resume/snapshotting/etc... of instances. When the blobs are different, random corruption/bugs/crashes/etc... may be observed.
app-emulation/qemu:plugins - Enable qemu plugin API via shared library loading.
app-emulation/qemu:png - Enable png image support for the VNC console server
app-emulation/qemu:pulseaudio - Enable pulseaudio output for sound emulation
app-emulation/qemu:rbd - Enable rados block device backend support, see http://ceph.newdream.net/wiki/QEMU-RBD
app-emulation/qemu:sdl - Enable the SDL-based console
app-emulation/qemu:sdl-image - SDL Image support for icons
app-emulation/qemu:slirp - Enable TCP/IP in hypervisor via net-libs/libslirp
app-emulation/qemu:spice - Enable Spice protocol support via app-emulation/spice
app-emulation/qemu:ssh - Enable SSH based block device support via net-libs/libssh2
app-emulation/qemu:static - Build the User and Software MMU (system) targets as well as tools as static binaries
app-emulation/qemu:static-user - Build the User targets as static binaries
app-emulation/qemu:systemtap - Enable SystemTAP/DTrace tracing
app-emulation/qemu:usb - Enable USB passthrough via dev-libs/libusb
app-emulation/qemu:usbredir - Use sys-apps/usbredir to redirect USB devices to another machine over TCP
app-emulation/qemu:vde - Enable VDE-based networking
app-emulation/qemu:vhost-net - Enable accelerated networking using vhost-net, see http://www.linux-kvm.org/page/VhostNet
app-emulation/qemu:vhost-user-fs - Enable shared file system access using the FUSE protocol carried over virtio.
app-emulation/qemu:virgl - Enable experimental Virgil 3d (virtual software GPU)
app-emulation/qemu:virtfs - Enable VirtFS via virtio-9p-pci / fsdev. See http://wiki.qemu.org/Documentation/9psetup
app-emulation/qemu:vte - Enable terminal support (x11-libs/vte) in the GTK+ interface
app-emulation/qemu:xattr - Add support for getting and setting POSIX extended attributes, through sys-apps/attr. Requisite for the virtfs backend.
app-emulation/qemu:xen - Enables support for Xen backends
app-emulation/qemu:xfs - Support xfsctl() notification and syncing for XFS backed virtual disks.
dev-java/icedtea:cacao - Use the CACAO virtual machine rather than HotSpot.
dev-java/icedtea:cups - Link against the CUPS library at compile time, rather than using it dynamically at runtime.
dev-java/icedtea:headless-awt - Don't install the X backend for AWT, needed by some GUIs (used to be X flag)
dev-java/icedtea:jamvm - Use the JamVM virtual machine rather than HotSpot.
dev-java/icedtea:jbootstrap - If possible, recompile the final IcedTea executables with itself.
dev-java/icedtea:kerberos - Link against Kerberos in order to obtain the cache location.
dev-java/icedtea:pax_kernel - Apply patch needed for pax enabled kernels.
dev-java/icedtea:pch - Build using pre-compiled headers.
dev-java/icedtea:sctp - Build the SCTP NIO channel implementation against lksctp
dev-java/icedtea:shenandoah - Include the Shenandoah ultra-low pause time garbage collector (-XX:+UseShenandoahGC) (arm64 and x86_64 only)
dev-java/icedtea:smartcard - Build the PCSC driver against pcsc-lite
dev-java/icedtea:system-lcms - Build against the system LCMS installation rather than the in-tree copy.
dev-java/icedtea:zero - Enable Zero assembler port (usually for non-HotSpot architectures)
dev-java/icedtea-bin:headless-awt - Don't install the X backend for AWT, needed by some GUIs (used to be X flag)
dev-java/openjdk:gentoo-vm - Allow this JDK to be recognised by Gentoo (package manager, eselect, java-config, EXPERIMENTAL!)
dev-java/openjdk:headless-awt - Don't install the X backend for AWT, needed by some GUIs
dev-java/openjdk:javafx - Import OpenJFX modules at build time, via dev-java/openjfx
dev-java/openjdk:jbootstrap - Build OpenJDK twice, the second time using the result of the first
dev-java/openjdk:source - Install JVM sources
dev-java/openjdk:systemtap - Enable SystemTAP/DTrace tracing
dev-lang/rust:clippy - Install clippy, Rust code linter
dev-lang/rust:dist - Install dist tarballs (used for bootstrapping)
dev-lang/rust:miri - Install miri, an interpreter for Rust's mid-level intermediate representation (requires USE=nightly, sometimes is broken)
dev-lang/rust:nightly - Enable nightly (UNSTABLE) features (NOTE: it does not install nightly version, just enables features marked as nightly at time of release)
dev-lang/rust:parallel-compiler - Build a multi-threaded rustc (experimental, not tested by upstream)
dev-lang/rust:profiler - Build the profiler runtime and rust-demangler tool (needed for '-C profile-generate' or '-C instrument-coverage' codegen opts)
dev-lang/rust:rls - Install rls, Rust Language Server (used with IDEs supporting RLS protocol)
dev-lang/rust:rust-src - Install rust-src, needed by developer tools and for build-std (cross)
dev-lang/rust:rustfmt - Install rustfmt, Rust code formatter
dev-lang/rust:system-bootstrap - Bootstrap using installed rust compiler
dev-lang/rust:system-llvm - Use the system LLVM installation
dev-lang/rust:wasm - Build support for the wasm32-unknown-unknown target
dev-libs/elfutils:lzma - Support automatic decompression of LZMA-compressed files and kernel images
dev-libs/elfutils:threads - Build the libraries with thread safe support
dev-libs/elfutils:utils - Install command-line utilities (all the eu-* programs)
dev-libs/elfutils:valgrind - Add support for memory debugging using dev-util/valgrind
dev-libs/glib:dbus - Enable dependencies required by glib libraries using dbus service to manage settings saving
dev-libs/glib:elf - Enable support for listing and extracting from ELF resource files with gresource tool
dev-libs/glib:mime - Pull in shared MIME database that many glib-based applications require at runtime to detect or open files. Warning: do not disable this flag unless installing on a headless server.
dev-libs/glib:sysprof - Enable profiling data capture support using dev-util/sysprof-capture
dev-libs/glib:systemtap - Build support for profiling and tracing using dev-util/systemtap
dev-libs/glib:utils - Install gtester-report utility to generate test report files for your software; build gresource utility with ELF support.
dev-python/pypy3-exe:low-memory - Build using PyPy with the engine configured towards low memory footprint. This makes it possible to build PyPy using ~3.5G of RAM on amd64 and ~half of that on x86, at the cost of lengthened build time.
media-libs/mesa:classic - Build drivers based on the classic architecture.
media-libs/mesa:d3d9 - Enable Direct 3D9 API through Nine state tracker. Can be used together with patched wine.
media-libs/mesa:egl - Enable EGL support.
media-libs/mesa:gallium - Build drivers based on Gallium3D, the new architecture for 3D graphics drivers.
media-libs/mesa:gbm - Enable the Graphics Buffer Manager for EGL on KMS.
media-libs/mesa:gles1 - Enable GLESv1 support.
media-libs/mesa:gles2 - Enable GLESv2 support.
media-libs/mesa:llvm - Enable LLVM backend for Gallium3D.
media-libs/mesa:lm-sensors - Enable Gallium HUD lm-sensors support.
media-libs/mesa:opencl - Enable the Clover Gallium OpenCL state tracker.
media-libs/mesa:osmesa - Build the Mesa library for off-screen rendering.
media-libs/mesa:valgrind - Compile in valgrind memory hints
media-libs/mesa:vdpau - Enable the VDPAU acceleration interface for the Gallium3D Video Layer.
media-libs/mesa:vulkan - Enable Vulkan drivers
media-libs/mesa:vulkan-overlay - Build vulkan-overlay-layer which displays Frames Per Second and other statistics
media-libs/mesa:wayland - Enable support for dev-libs/wayland
media-libs/mesa:xa - Enable the XA (X Acceleration) API for Gallium3D.
media-libs/mesa:xvmc - Enable the XvMC acceleration interface for the Gallium3D Video Layer.
media-libs/mesa:zink - Enable the Zink OpenGL-over-Vulkan Gallium driver
media-sound/sox:amr - Enables Adaptive Multi-Rate Audio support
media-sound/sox:id3tag - Enables ID3 tagging with id3tag library
media-sound/sox:opus - Enables reading Ogg Opus files.
media-sound/sox:twolame - Enables twolame support (MPEG Audio Layer 2 encoder)
media-tv/kodi:airplay - enable AirPlay support
media-tv/kodi:bluetooth - Enable JSON-RPC over BT for remote control connected via bluetooth
media-tv/kodi:bluray - Enable playback of Blu-ray filesystems
media-tv/kodi:caps - Use sys-libs/libcap to bind to privileged ports as non-root
media-tv/kodi:cec - Enable support for HDMI-CEC devices via libcec
media-tv/kodi:dav1d - Enables AV1 decoding via media-libs/dav1d
media-tv/kodi:eventclients - Install full set of Kodi python evenclients and evenclients examples
media-tv/kodi:gbm - Use the Graphics Buffer Manager for EGL on KMS.
media-tv/kodi:gles - Use simplified OpenGLES instead of full-scale OpenGL
media-tv/kodi:libusb - Use virtual/libusb for usb device hotplug support. This flag should only be enabled if you're running a non-Linux kernel or you don't want to use sys-fs/udev.
media-tv/kodi:lirc - Enable support for IR remote controls using app-misc/lirc
media-tv/kodi:mariadb - Enable support store of media library metadata on local or remote MariaDB
media-tv/kodi:mysql - Enable support store of media library metadata on local or remote MySQL
media-tv/kodi:nfs - Enable NFS client support
media-tv/kodi:optical - Enable Audio CD playback, optical disks detection and reading (CD-ROM, Video CD, and others), and ISO optical disk images direct reading. DVD disks may require additional 'udf' flag.
media-tv/kodi:power-control - Enable control of shutdown, reboot, suspend, and hibernate
media-tv/kodi:raspberry-pi - Enable support for the Raspberry Pi
media-tv/kodi:system-ffmpeg - Use system ffmpeg instead of the bundled one
media-tv/kodi:udev - Use sys-fs/udev rules to handle devices' permissions and hotplug support. Unless you know what you're doing do not disable this flag on Linux kernels. This is provided as an option for completeness.
media-tv/kodi:udf - Enable UDF support. Required for playing blurays.
media-tv/kodi:upower - Use sys-power/upower to get battery level and active power source
media-tv/kodi:webserver - Enable internal webserver
media-tv/kodi:xslt - Enable metadata XSLT scrapers support with dev-libs/libxslt
net-fs/cifs-utils:ads - Enable Active Directory support and create cifs.idmap binary - idmap support
net-fs/cifs-utils:caps - libcap support
net-fs/cifs-utils:caps-ng - libcap-ng support
net-fs/cifs-utils:creds - cifs credentials support
net-fs/nfs-utils:junction - Enable NFS junction support in nfsref
net-fs/nfs-utils:ldap - Add ldap support
net-fs/nfs-utils:libmount - Link mount.nfs with libmount
net-fs/nfs-utils:nfsdcld - Enable nfsdcld NFSv4 clientid tracking daemon
net-fs/nfs-utils:nfsidmap - Enable support for newer nfsidmap helper
net-fs/nfs-utils:nfsv4 - Enable support for NFSv4
net-fs/nfs-utils:nfsv41 - Enable support for NFSv4.1
net-fs/nfs-utils:uuid - Support UUID lookups in rpc.mountd
net-fs/samba:addc - Enable Active Directory Domain Controller support
net-fs/samba:addns - Enable AD DNS integration
net-fs/samba:ads - Enable Active Directory support
net-fs/samba:ceph - Enable support for Ceph distributed filesystem via sys-cluster/ceph
net-fs/samba:client - Enables the client part
net-fs/samba:cluster - Enable support for clustering
net-fs/samba:dmapi - Enable support for DMAPI. This currently works only in combination with XFS.
net-fs/samba:glusterfs - Enable support for Glusterfs filesystem via sys-cluster/glusterfs
net-fs/samba:gpg - Use app-crypt/gpgme for AD DC
net-fs/samba:iprint - Enabling iPrint technology by Novell
net-fs/samba:json - Enable json audit support through dev-libs/jansson
net-fs/samba:ntvfs - Enable support for NTVFS fileserver
net-fs/samba:profiling-data - Enables support for collecting profiling data
net-fs/samba:quota - Enables support for user quotas
net-fs/samba:regedit - Enable support for regedit command-line tool
net-fs/samba:snapper - Enable vfs_snapper module (requires sys-apps/dbus)
net-fs/samba:spotlight - Enable support for spotlight backend
net-fs/samba:system-heimdal - Use app-crypt/heimdal instead of bundled heimdal.
net-fs/samba:system-mitkrb5 - Use app-crypt/mit-krb5 instead of app-crypt/heimdal.
net-fs/samba:winbind - Enables support for the winbind auth daemon
net-misc/connman:ethernet - Enable ethernet support.
net-misc/connman:iptables - Use net-firewall/iptables as firewall.
net-misc/connman:iwd - Enable wifi support via net-wireless/iwd
net-misc/connman:l2tp - Use net-dialup/xl2tpd for L2TP VPN support.
net-misc/connman:nftables - Use net-firewall/nftables as firewall.
net-misc/connman:ofono - Use net-misc/ofono for telephony support.
net-misc/connman:openconnect - Use net-vpn/openconnect for VPN support.
net-misc/connman:openvpn - Use net-vpn/openvpn for openvpn support.
net-misc/connman:pptp - Use net-dialup/pptpclient for PPTP VPN support.
net-misc/connman:tools - Enable testing tools.
net-misc/connman:vpnc - Use net-vpn/vpnc for cisco VPN support.
net-misc/connman:wireguard - Enable WireGuard VPN support.
net-misc/connman:wispr - Enable support for WISPr hotspot logins.
net-wireless/bluez:btpclient - Enable BTP client
net-wireless/bluez:deprecated - Build deprecated plugins
net-wireless/bluez:experimental - Build experimental plugins
net-wireless/bluez:extra-tools - Install tools that upstream doesn't install on purpose by default. All this tools shouldn't be used. Then, please notify upstream about you still need them to let them know the situation.
net-wireless/bluez:mesh - Add support for Bluetooth Mesh control application and advertising bearer.
net-wireless/bluez:midi - Enable MIDI support
net-wireless/bluez:obex - Enable OBEX transfer support
net-wireless/bluez:test-programs - Install tools for testing of various Bluetooth functions
sys-apps/accountsservice:elogind - Use sys-auth/elogind for session tracking
sys-apps/accountsservice:systemd - Use sys-apps/systemd for session tracking
sys-apps/policycoreutils:audit - Enable support for sys-process/audit and use the audit_* functions (like audit_getuid instead of getuid())
sys-apps/tcp-wrappers:netgroups - Support matching NIS (host) netgroup names via the @netgroup syntax (if you don't know what this means, you most likely do not need it)
sys-apps/watchdog:nfs - enable support for checking nfs mounts
sys-block/partimage:nologin - Do not include login support when connecting partimaged
sys-boot/lilo:device-mapper - Enable support for device-mapper from sys-fs/lvm2
sys-boot/lilo:minimal - Do not install the dolilo helper script
sys-boot/lilo:pxeserial - Avoid character echo on PXE serial console
sys-devel/gdb:cet - Enable Intel Control-flow Enforcement Technology.
sys-devel/gdb:lzma - Support lzma compression in ELF debug info
sys-devel/gdb:multitarget - Support all known targets in one gdb binary
sys-devel/gdb:python - Enable support for the new internal scripting language, as well as extended pretty printers
sys-devel/gdb:server - Install the "gdbserver" program (useful for embedded/remote targets)
sys-devel/gdb:source-highlight - Enable listing highlighting via dev-util/source-highlight
sys-devel/gdb:xml - Support parsing XML data files needed (at least) for cpu features, memory maps, and syscall tracing
sys-devel/gdb:xxhash - Use dev-libs/xxhash to speed up internal hashing.
sys-fs/lvm2:device-mapper-only - Build only device-mapper and not the rest of LVM2 (UNSUPPORTED)
sys-fs/lvm2:lvm2create-initrd - Install lvm2create_initrd script and pull in sys-apps/makedev for the /sbin/MAKEDEV command
sys-fs/lvm2:sanlock - Enable lvmlockd with support for sanlock
sys-fs/lvm2:thin - Support for thin volumes
x11-apps/igt-gpu-tools:X - Enable intel-gpu-overlay xlib/cairo backend
x11-apps/igt-gpu-tools:chamelium - Enables support for building Chamelium tests
x11-apps/igt-gpu-tools:man - Build and install man pages
x11-apps/igt-gpu-tools:overlay - Build the intel-gpu-overlay utility
x11-apps/igt-gpu-tools:runner - Build the test runner
x11-apps/igt-gpu-tools:tests - Enable tests
x11-apps/igt-gpu-tools:valgrind - Support valgrind annotations
x11-apps/igt-gpu-tools:xv - Enable intel-gpu-overlay xv backend
x11-base/xorg-server:dmx - Build the Distributed Multiheaded X server
x11-base/xorg-server:elogind - Use elogind to get control over framebuffer when running as regular user
x11-base/xorg-server:kdrive - Build the kdrive X servers
x11-base/xorg-server:unwind - Enable libunwind usage for backtraces
x11-base/xorg-server:xcsecurity - Build Security extension
x11-base/xorg-server:xephyr - Build the Xephyr server
x11-base/xorg-server:xnest - Build the Xnest server
x11-base/xorg-server:xorg - Build the Xorg X server (HIGHLY RECOMMENDED)
x11-base/xorg-server:xvfb - Build the Xvfb server
x11-wm/fluxbox:bidi - Enable bidirectional language support with dev-libs/fribidi
x11-wm/fluxbox:slit - Enables the Fluxbox slit (or dock)
x11-wm/fluxbox:systray - Enables the system tray in the Fluxbox toolbar
x11-wm/fluxbox:toolbar - Enables the Fluxbox toolbar
