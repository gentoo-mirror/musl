Use stdlib.h defined types uint8_t, uint16_t, uint32_t and uint64_t
for compatibility with musl libc

--- alsa-lib-1.1.3.orig/include/pcm.h	2015-02-26 13:34:52.000000000 +0100
+++ alsa-lib-1.1.3/include/pcm.h	2015-07-28 13:44:32.423885625 +0200
@@ -29,6 +29,8 @@
 #ifndef __ALSA_PCM_H
 #define __ALSA_PCM_H
 
+#include <stdint.h>	/* uint_ types */
+
 #ifdef __cplusplus
 extern "C" {
 #endif
@@ -1063,10 +1065,10 @@
 int snd_pcm_format_physical_width(snd_pcm_format_t format);		/* in bits */
 snd_pcm_format_t snd_pcm_build_linear_format(int width, int pwidth, int unsignd, int big_endian);
 ssize_t snd_pcm_format_size(snd_pcm_format_t format, size_t samples);
-u_int8_t snd_pcm_format_silence(snd_pcm_format_t format);
-u_int16_t snd_pcm_format_silence_16(snd_pcm_format_t format);
-u_int32_t snd_pcm_format_silence_32(snd_pcm_format_t format);
-u_int64_t snd_pcm_format_silence_64(snd_pcm_format_t format);
+uint8_t snd_pcm_format_silence(snd_pcm_format_t format);
+uint16_t snd_pcm_format_silence_16(snd_pcm_format_t format);
+uint32_t snd_pcm_format_silence_32(snd_pcm_format_t format);
+uint64_t snd_pcm_format_silence_64(snd_pcm_format_t format);
 int snd_pcm_format_set_silence(snd_pcm_format_t format, void *buf, unsigned int samples);
 
 snd_pcm_sframes_t snd_pcm_bytes_to_frames(snd_pcm_t *pcm, ssize_t bytes);
