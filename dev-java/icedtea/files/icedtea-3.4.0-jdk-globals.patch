diff --git openjdk/jdk/src/solaris/native/java/lang/childproc.h.orig openjdk/jdk/src/solaris/native/java/lang/childproc.h
index 75352a7..58368fd 100644
--- openjdk/jdk/src/solaris/native/java/lang/childproc.h.orig
+++ openjdk/jdk/src/solaris/native/java/lang/childproc.h
@@ -119,7 +119,7 @@ typedef struct _SpawnInfo {
  * The cached and split version of the JDK's effective PATH.
  * (We don't support putenv("PATH=...") in native code)
  */
-const char * const *parentPathv;
+extern const char * const *parentPathv;
 
 ssize_t restartableWrite(int fd, const void *buf, size_t count);
 int restartableDup2(int fd_from, int fd_to);
diff --git openjdk/jdk/src/solaris/native/java/lang/childproc.c.orig openjdk/jdk/src/solaris/native/java/lang/childproc.c
index 1d183cf..0b3d343 100644
--- openjdk/jdk/src/solaris/native/java/lang/childproc.c.orig
+++ openjdk/jdk/src/solaris/native/java/lang/childproc.c
@@ -33,6 +33,7 @@
 
 #include "childproc.h"
 
+const char * const *parentPathv;
 
 ssize_t
 restartableWrite(int fd, const void *buf, size_t count)
diff --git openjdk/jdk/src/solaris/native/sun/nio/ch/sctp/Sctp.h
index 040409a..2585fe7 100644
--- openjdk/jdk/src/solaris/native/sun/nio/ch/sctp/Sctp.h.orig
+++ openjdk/jdk/src/solaris/native/sun/nio/ch/sctp/Sctp.h
@@ -324,22 +324,6 @@ typedef int sctp_peeloff_func(int sock, sctp_assoc_t id);
 
 #endif /* __linux__ */
 
-#ifdef USE_SYSTEM_SCTP
-#define nio_sctp_getladdrs sctp_getladdrs
-#define nio_sctp_freeladdrs sctp_freeladdrs
-#define nio_sctp_getpaddrs sctp_getpaddrs
-#define nio_sctp_freepaddrs sctp_freepaddrs
-#define nio_sctp_bindx sctp_bindx
-#define nio_sctp_peeloff sctp_peeloff
-#else
-sctp_getladdrs_func* nio_sctp_getladdrs;
-sctp_freeladdrs_func* nio_sctp_freeladdrs;
-sctp_getpaddrs_func* nio_sctp_getpaddrs;
-sctp_freepaddrs_func* nio_sctp_freepaddrs;
-sctp_bindx_func* nio_sctp_bindx;
-sctp_peeloff_func* nio_sctp_peeloff;
-#endif
-
 jboolean loadSocketExtensionFuncs(JNIEnv* env);
 
 #endif /* !SUN_NIO_CH_SCTP_H */
diff --git openjdk/jdk/src/solaris/native/sun/nio/ch/sctp/SctpNet.c
index 531c511..2aefdf7 100644
--- openjdk/jdk/src/solaris/native/sun/nio/ch/sctp/SctpNet.c.orig
+++ openjdk/jdk/src/solaris/native/sun/nio/ch/sctp/SctpNet.c
@@ -40,6 +40,22 @@
 #include "sun_nio_ch_sctp_SctpNet.h"
 #include "sun_nio_ch_sctp_SctpStdSocketOption.h"
 
+#ifdef USE_SYSTEM_SCTP
+#define nio_sctp_getladdrs sctp_getladdrs
+#define nio_sctp_freeladdrs sctp_freeladdrs
+#define nio_sctp_getpaddrs sctp_getpaddrs
+#define nio_sctp_freepaddrs sctp_freepaddrs
+#define nio_sctp_bindx sctp_bindx
+#define nio_sctp_peeloff sctp_peeloff
+#else
+static sctp_getladdrs_func* nio_sctp_getladdrs;
+static sctp_freeladdrs_func* nio_sctp_freeladdrs;
+static sctp_getpaddrs_func* nio_sctp_getpaddrs;
+static sctp_freepaddrs_func* nio_sctp_freepaddrs;
+static sctp_bindx_func* nio_sctp_bindx;
+static sctp_peeloff_func* nio_sctp_peeloff;
+#endif
+
 static jclass isaCls = 0;
 static jmethodID isaCtrID = 0;
 
diff --git openjdk/jdk/src/solaris/native/sun/security/jgss/wrapper/NativeFunc.h.orig openjdk/jdk/src/solaris/native/sun/security/jgss/wrapper/NativeFunc.h
index ea704b7..582382e 100644
--- openjdk/jdk/src/solaris/native/sun/security/jgss/wrapper/NativeFunc.h.orig
+++ openjdk/jdk/src/solaris/native/sun/security/jgss/wrapper/NativeFunc.h
@@ -265,6 +265,6 @@ typedef struct GSS_FUNCTION_TABLE {
 typedef GSS_FUNCTION_TABLE *GSS_FUNCTION_TABLE_PTR;
 
 /* global GSS function table */
-GSS_FUNCTION_TABLE_PTR ftab;
+extern GSS_FUNCTION_TABLE_PTR ftab;
 
 #endif
diff --git openjdk/jdk/src/solaris/native/sun/security/jgss/wrapper/NativeFunc.c.orig openjdk/jdk/src/solaris/native/sun/security/jgss/wrapper/NativeFunc.c
index 8a1d0ee..1d86255 100644
--- openjdk/jdk/src/solaris/native/sun/security/jgss/wrapper/NativeFunc.c.orig
+++ openjdk/jdk/src/solaris/native/sun/security/jgss/wrapper/NativeFunc.c
@@ -28,6 +28,8 @@
 #include <dlfcn.h>
 #include "NativeFunc.h"
 
+GSS_FUNCTION_TABLE_PTR ftab;
+
 /* standard GSS method names (ordering is from mapfile) */
 static const char RELEASE_NAME[]                = "gss_release_name";
 static const char IMPORT_NAME[]                 = "gss_import_name";
